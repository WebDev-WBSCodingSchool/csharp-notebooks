#!meta

{"kernelInfo":{"defaultKernelName":"csharp","items":[{"name":"csharp","languageName":"csharp"},{"name":"fsharp","languageName":"F#","aliases":["f#","fs"]},{"name":"html","languageName":"HTML"},{"name":"http","languageName":"HTTP"},{"name":"javascript","languageName":"JavaScript","aliases":["js"]},{"name":"mermaid","languageName":"Mermaid"},{"name":"pwsh","languageName":"PowerShell","aliases":["powershell"]},{"name":"value"}]}}

#!markdown

# Introduction to Polyglot Notebooks with C#

Welcome to the world of interactive programming with C# using Polyglot Notebooks!

#!markdown

### What is a Notebook?

A **notebook** is an interactive document that combines:
- **Code cells** - executable blocks of code
- **Markdown cells** - formatted text, explanations, and documentation
- **Output cells** - results from code execution (text, graphics, tables, etc.)

### Why Use Notebooks for Learning C#?

Notebooks provide an excellent environment for learning and experimenting with C# because they allow you to:

1. **Write and execute code incrementally** - test small snippets without creating full projects
2. **Document your learning** - add explanations alongside your code
3. **See immediate results** - execute code and see output right below each cell
4. **Experiment safely** - try different approaches without affecting other parts of your code
5. **Share knowledge** - notebooks are perfect for tutorials, examples, and explanations

Throughout this course, we'll use notebooks to provide interactive explanations and hands-on coding experiences with C#.

#!markdown

## Let's Try Some C# Code!

Below is a simple example that demonstrates basic C# syntax including variables, string interpolation, and loops. Click the "Execute Cell" button (or press Shift+Enter) to run the code and see the output.

#!csharp

int year = 2025;

Console.WriteLine($"The year is {year}");

for (int i = 0; i < 3; i++)
{
    Console.WriteLine($"Count: {i}");
}

#!markdown

## Code Explanation

The above example demonstrates several fundamental C# concepts:

1. **Variable Declaration**: `int year = 2025;` creates an integer variable and assigns it a value
2. **String Interpolation**: `$"The year is {year}"` embeds the variable value directly into the string
3. **Console Output**: `Console.WriteLine()` prints text to the console
4. **For Loop**: The loop runs 3 times (i = 0, 1, 2) and prints the counter value each time

**Expected Output:**
```
The year is 2025
Count: 0
Count: 1
Count: 2
```

Try modifying the code above - change the year value or the loop condition and run it again!

#!markdown

## Next Steps

Now that you understand what notebooks are and have seen your first C# example, you're ready to dive deeper into C# programming!

In the upcoming notebooks, we'll explore:
- C# data types and variables
- Control structures (if statements, loops, switch)
- Methods and functions
- Object-oriented programming concepts
- Error handling
- And much more!

**Remember**: The beauty of notebooks is that you can experiment, modify code, and see results immediately. Don't hesitate to play around with the examples!
